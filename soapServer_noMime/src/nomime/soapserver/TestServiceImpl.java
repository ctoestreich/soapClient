
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package nomime.soapserver;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.5.2
 * 2012-03-09T15:47:20.653-08:00
 * Generated source version: 2.5.2
 * 
 */

@javax.jws.WebService(
                      serviceName = "TestServiceServicePorts",
                      portName = "TestServicePort",
                      targetNamespace = "http://soapserver.nomime/",
                      wsdlLocation = "testServiceNoMime.wsdl",
                      endpointInterface = "nomime.soapserver.TestService")
                      
public class TestServiceImpl implements TestService {

    private static final Logger LOG = Logger.getLogger(TestServiceImpl.class.getName());

    /* (non-Javadoc)
     * @see nomime.soapserver.TestService#serviceMethod(nomime.soapserver.ServiceMethodRequest  inputParameters ,)nomime.soapserver.ServiceMethodResponse  outputParameters ,)byte[]  attachment )*
     */
    public void serviceMethod(ServiceMethodRequest inputParameters,javax.xml.ws.Holder<ServiceMethodResponse> outputParameters,javax.xml.ws.Holder<byte[]> attachment) { 
        LOG.info("Executing operation serviceMethod");
        System.out.println(inputParameters);
        try {
            nomime.soapserver.ServiceMethodResponse outputParametersValue = new nomime.soapserver.ServiceMethodResponse();
            nomime.soapserver.ServiceResponse serviceResponse = new nomime.soapserver.ServiceResponse();
            serviceResponse.setMyInt(inputParameters.getIntA() + 1);
            serviceResponse.setMyBool(true);
            outputParametersValue.setResponse(serviceResponse);
            outputParameters.value = outputParametersValue;
            byte[] attachmentValue = (new String("Hello there")).getBytes();
            attachment.value = attachmentValue;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
